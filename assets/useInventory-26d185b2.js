import{n as w,m as c,r as m,X as n,Y as a,Z as P,$ as f,a0 as E}from"./index-6881a38b.js";const F=()=>{const e=w(),u=c(t=>t.inventory.products)||[],i=c(t=>t.inventory.categories),p=c(t=>t.inventory.loading),{meta:l}=c(t=>t.inventory),[g,h]=m.useState([]),d=async(t={})=>{try{e(n(!0));const r=new URLSearchParams(t).toString(),o=await a.get(`/products/allProducts?${r}`);console.log(o.data.meta),o.data.success&&(e(P(o.data.data||[])),e(f(o.data.meta)))}catch(r){console.error("Error fetching products:",r)}finally{e(n(!1))}};return{getProducts:d,updateStock:async(t,r)=>{try{await a.put(`/products/updateQuantity/${t}`,{stock:Number(r)}),d()}catch(o){console.error("Error updating stock:",o)}},products:u,loading:p,getCategories:async()=>{try{const t=await a.get("/categories/getAll");console.log(t),t.data.status&&e(E(t.data.data))}catch(t){console.error("Failed to fetch categories:",t)}},categories:i,addOrEditProduct:async(t,r)=>{try{const o=t?`/products/editProduct/${t}`:"/products/addProduct",s=await a[t?"put":"post"](o,r);if(!s.data.success)throw new Error(s.data.message||"Failed to save product")}catch(o){throw console.error("Add/Edit error:",o),o}},addProduct:async(t,r)=>{try{const o="/products/addProduct",s=await a["post"](o,r);if(!s.data.success)throw new Error(s.data.message||"Failed to save product")}catch(o){throw console.error("Add/Edit error:",o),o}},addNewProductWithImages:async t=>{try{const r=await a.post("/products/addProduct",t,{headers:{"Content-Type":"multipart/form-data"}});if(!r.data.status)throw new Error(r.data.error||"Failed to add product");return r.data}catch(r){throw console.error("Error adding product with images:",r),r}},getBrands:async()=>{const t=await a.get("/products/getAllBrands");t.data.success&&h(t.data.data)},brands:g,meta:l,enableProduct:async t=>{try{return(await a.put(`/products/enableProduct/${t}`)).data}catch(r){throw console.error("Enable product error:",r),r}}}};export{F as u};
