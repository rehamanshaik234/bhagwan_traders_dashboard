import{n as h,m as w,ap as n,Y as r,aq as f,ar as c,as as p,at as S}from"./index-6881a38b.js";const N=()=>{const e=h(),{newCustomers:l,pagination:i,dailyStats:u,monthlyStats:y,loadingNew:d,loadingStats:m}=w(t=>t.customers);return{newCustomers:l,pagination:i,loadingNew:d,fetchNewCustomers:async(t={})=>{e(n(!0));try{const s=new URLSearchParams(t).toString(),a=await r.get(`/customer/new${s?"?"+s:""}`);a.data.success&&e(f(a.data))}catch(s){console.error("Failed to fetch new customers:",s)}finally{e(n(!1))}},dailyStats:u,monthlyStats:y,loadingStats:m,fetchDailyStats:async(t=30)=>{e(c(!0));try{const s=await r.get("/customer/stats/daily",{params:{days:t}});e(p(s.data.data||[]))}catch(s){console.error("Error fetching daily stats:",s)}finally{e(c(!1))}},fetchMonthlyStats:async()=>{e(c(!0));try{const t=await r.get("/customer/stats/monthly");e(S(t.data.data||[]))}catch(t){console.error("Error fetching monthly stats:",t)}finally{e(c(!1))}},exportStats:async()=>{try{const t=await r.get("/customer/stats/export",{responseType:"blob"}),s=new Blob([t.data],{type:"text/csv"}),a=window.URL.createObjectURL(s),o=document.createElement("a");o.href=a,o.setAttribute("download","customer_stats.csv"),document.body.appendChild(o),o.click(),o.remove(),window.URL.revokeObjectURL(a)}catch(t){console.error("Failed to export customer stats:",t)}}}};export{N as u};
